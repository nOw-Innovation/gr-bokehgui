# Test the documentation -- always

name: readInReverse

# Run this workflow manually from the Actions tab
on: workflow_dispatch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "populate"
  populate:
    # Run on a single platform or use a matrix to test against several
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04,ubuntu-20.04]
    env:
       TMPTMPDIR: /tmp
       OS_CHOICE: ${{ matrix.os }}
       
    # Steps represent a sequence of tasks that will be executed as part of the job
    name: gr-bokeh on ${{ matrix.os }} 
    steps:       
      - name: Make a place to store logs
        run:  mkdir -p ~/artifacts

      - name: Security first
        run: |
          mkdir ~/logs
          sudo apt update
          sudo apt install -y software-properties-common apt-utils 
          sudo apt install -y unattended-upgrades
          sudo unattended-upgrade -d >~/artifacts/securityFirst.log

      - name: Install dependencies as needed
        run: |
          sudo apt install -qy build-essential cmake cmake-curses-gui ninja-build python3-pip
          sudo apt install -qy texinfo gawk
          sudo apt install -qy gnuradio gnuradio-dev python3-pip swig
          sudo apt install -qy libqwt-qt5-dev libqt5opengl5-dev python3-pyqt5 
          sudo apt install -qy python3-gi python3-gi-cairo gir1.2-gtk-3.0 
          sudo apt install -qy npm
          sudo npm install -g npm@8.5 node@14
          pip3 install bokeh
          exit

      - name: Sanity checks
        run: |
          gr_modtool info | tee ~/artifacts/sanity.logs
          bokeh info | tee -a ~/artifacts/sanity.logs
          pushd /tmp
          wget https://github.com/bokeh/bokeh/archive/refs/tags/$(bokeh --version).tar.gz      
          tar -xvf $(bokeh --version).tar.gz bokeh-$(bokeh --version)/examples/app --strip-components=2
          cp -r app/spectrogram ~/artifacts
          popd
          
      - name: Checkout the current branch
        uses: actions/checkout@master

      - name: Build gr-bokehgui with CMake
        run: |
          mkdir -p build
          cd build
          cmake ../
          cmake --build .
          sudo cmake --build . --target install
                    
      - name: Demonstrate that the tutorial will build as promised and is deployable
        run: |
          cd examples
          grcc tutorial.grc
          mkdir -p ~/artifacts/tutorial
          cp tutorial.py ~/artifacts/tutorial
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: log files
          path: ~/artifacts/
