# Rely on MiniConda to solve for dependencies and latest security updates
name: withConda

# Run this workflow manually from the Actions tab
on: workflow_dispatch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "populate"
  populate:
    # Run on a single platform or use a matrix to test against several
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        gr: [3.8.]
        bokeh: [2.3.3]
        support2: [false]
      fail-fast: false
    env:
       TMPTMPDIR: /tmp
       
    # Steps represent a sequence of tasks that will be executed as part of the job
    name: gr-bokeh with gnuradio ${{ matrix.gr }} and bokeh ${{ matrix.bokeh }} on ${{ matrix.os }}
    steps:
      - name: Essential housekeeping
        run: |
          mkdir -p ~/artifacts
          sudo apt update
          
      - name: Security first
        if: true
        run: |
          sudo apt install -y software-properties-common apt-utils 
          sudo apt install -y unattended-upgrades
          sudo unattended-upgrade -d >~/artifacts/securityFirst.log

      - name: Performance second
        if: true
        run:  sudo apt upgrade -qy

      - name: Build essentials 
        if: true
        run: |
          sudo apt install -qy build-essential cmake cmake-curses-gui ninja-build
          sudo apt install -qy texinfo gawk g++ swig
          sudo apt install -qy npm nodejs
          sudo npm install -g npm@8.5
 
      - name: Prefer Python 3
        run: |
          sudo apt install -y python3-pip
          python3 -m pip install --user --upgrade pip
          pip install setuptools
          
      - name: Other possible requirements (enable as needed)
        if: false
        run: |
          sudo apt install -qy build-essential npm nodejs cmake cmake-curses-gui ninja-build python3-pip
          sudo apt install -qy lrzip cmake g++ libboost-all-dev libgmp-dev swig python3-numpy \
                           python3-mako python3-sphinx python3-lxml doxygen libfftw3-dev \
                           libsdl1.2-dev libgsl-dev libqwt-qt5-dev libqt5opengl5-dev python3-pyqt5 \
                           liblog4cpp5-dev libzmq3-dev python3-yaml python3-click python3-click-plugins \
                           python3-zmq python3-scipy python3-gi python3-gi-cairo gir1.2-gtk-3.0 \
                           libcodec2-dev libgsm1-dev
          sudo apt install -qy pybind11-dev python3-matplotlib libsndfile1-dev \
                           python3-pip libsoapysdr-dev soapysdr-tools
          pip install pygccxml
          pip install pyqtgraph
          sudo apt install -qy libiio-dev libad9361-dev libspdlog-dev python3-packaging

      - name: Install gnuradio
        run: |
          sudo apt install -qy libiio-dev libad9361-dev libspdlog-dev python3-packaging
          sudo apt install -qy liborc-dev
          sudo apt install -qy gnuradio gnuradio-dev

      - name: use pip to install initial version bokeh
        run: |
          pip3 install bokeh==${{ matrix.bokeh }} 

      - name: Miniconda3
        if: ! matrix.support2
        run: |
          FILENAME="Miniconda3-py39_4.10.3-Linux-x86_64.sh"
          SHA256="1ea2f885b4dbc3098662845560bc64271eb17085387a70c2ba3f29fff6f8d52f"
          echo "$SHA256 $FILENAME" >checksha.sha256
          wget https://repo.anaconda.com/miniconda/$FILENAME
          sha256sum --check checksha.sha256 && bash $FILENAME -b
          eval "$(${HOME}/miniconda3/bin/conda shell.bash hook)"
          TMPDIR=${TMPTMPDIR} conda init -q bash
          conda config --env --add channels conda-forge
          conda deactivate
          TMPDIR=${TMPTMPDIR} conda update -qy -c defaults conda
          exit

      - uses: actions/checkout@master

      - name: Rely on rsarg channel on conda to pick conda3 dependencies
        if: ! matrix.support2
        run: |
          pushd ~
          __conda_setup="$(~/miniconda3/bin/conda shell.bash hook 2> /dev/null)"
          if [ $? -eq 0 ]; then
            eval "$__conda_setup"
          else
            if [ -f "~/miniconda3/etc/profile.d/conda.sh" ]; then
              source "~/miniconda3/etc/profile.d/conda.sh"
            else
              export PATH="~/miniconda3/bin:$PATH"
            fi
          fi
          unset __conda_setup
          conda activate
          popd
          TMPDIR=${TMPTMPDIR} conda install -qy -c rsarg --only-deps gr-bokehgui
          
      - name: Build gr-bokehgui with CMake for conda3
        if: ! matrix.support2
        run: |
          pushd ~
          __conda_setup="$(~/miniconda3/bin/conda shell.bash hook 2> /dev/null)"
          if [ $? -eq 0 ]; then
            eval "$__conda_setup"
          else
            if [ -f "~/miniconda3/etc/profile.d/conda.sh" ]; then
              source "~/miniconda3/etc/profile.d/conda.sh"
            else
              export PATH="~/miniconda3/bin:$PATH"
            fi
          fi
          unset __conda_setup
          conda activate
          popd
          gnuradio-config-info --version  | tee -a ~/artifacts/gnuradio.log
          gnuradio-config-info --prefix --prefs | tee -a ~/artifacts/gnuradio.log
          gnuradio-config-info --enabled-components | tee -a ~/artifacts/gnuradio.log
          gnuradio-config-info --cc --cxx --cflags | tee -a ~/artifacts/gnuradio.log
          python3 -m bokeh info | tee -a ~/artifacts/bokeh.log
          mkdir -p build && cd build
          cmake -G Ninja -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DCMAKE_PREFIX_PATH=$CONDA_PREFIX -DLIB_SUFFIX="" ..
          cmake --build .
          cmake --build . --target install
          
      - name: Did it work (conda3)?
        if: ! matrix.support2
        run: |
          pushd ~
          __conda_setup="$(~/miniconda3/bin/conda shell.bash hook 2> /dev/null)"
          if [ $? -eq 0 ]; then
            eval "$__conda_setup"
          else
            if [ -f "~/miniconda3/etc/profile.d/conda.sh" ]; then
              source "~/miniconda3/etc/profile.d/conda.sh"
            else
              export PATH="~/miniconda3/bin:$PATH"
            fi
          fi
          unset __conda_setup
          conda activate
          popd
          mkdir -p test && cd test
          cp -r ../examples .
          cd examples
          grcc tutorial.grc
          cp tutorial.py ~/artifacts/tutorial3.py
          
      - name: Miniconda2
        if: matrix.support2
        run: |
          FILENAME="Miniconda2-4.7.12.1-Linux-x86_64.sh"
          SHA256="383fe7b6c2574e425eee3c65533a5101e68a2d525e66356844a80aa02a556695"
          echo "$SHA256 $FILENAME" >checksha.sha256
          wget https://repo.anaconda.com/miniconda/$FILENAME
          sha256sum --check checksha.sha256 && bash $FILENAME -b
          eval "$(${HOME}/miniconda2/bin/conda shell.bash hook)"
          TMPDIR=${TMPTMPDIR} conda init -q bash
          conda config --env --add channels conda-forge
          conda deactivate
          TMPDIR=${TMPTMPDIR} conda update -qy -c defaults conda
          exit

      - name: Rely on rsarg channel on conda to pick conda2 dependencies
        if: matrix.support2
        run: |
          pushd ~
          __conda_setup="$(~/miniconda2/bin/conda shell.bash hook 2> /dev/null)"
          if [ $? -eq 0 ]; then
            eval "$__conda_setup"
          else
            if [ -f "~/miniconda2/etc/profile.d/conda.sh" ]; then
              source "~/miniconda2/etc/profile.d/conda.sh"
            else
              export PATH="~/miniconda2/bin:$PATH"
            fi
          fi
          unset __conda_setup
          conda activate
          popd
          TMPDIR=${TMPTMPDIR} conda install -qy -c rsarg --only-deps gr-bokehgui
          
      - name: Build gr-bokehgui with CMake for conda2
        if: matrix.support2
        run: |
          pushd ~
          __conda_setup="$(~/miniconda2/bin/conda shell.bash hook 2> /dev/null)"
          if [ $? -eq 0 ]; then
            eval "$__conda_setup"
          else
            if [ -f "~/miniconda2/etc/profile.d/conda.sh" ]; then
              source "~/miniconda2/etc/profile.d/conda.sh"
            else
              export PATH="~/miniconda2/bin:$PATH"
            fi
          fi
          unset __conda_setup
          conda activate
          popd
          gnuradio-config-info --version  | tee -a ~/artifacts/gnuradio.log
          gnuradio-config-info --prefix --prefs | tee -a ~/artifacts/gnuradio.log
          gnuradio-config-info --enabled-components | tee -a ~/artifacts/gnuradio.log
          gnuradio-config-info --cc --cxx --cflags | tee -a ~/artifacts/gnuradio.log
          python2 -m bokeh info | tee -a ~/artifacts/bokeh.log
          mkdir -p build2 && cd build2
          cmake -G Ninja -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DCMAKE_PREFIX_PATH=$CONDA_PREFIX -DLIB_SUFFIX="" ..
          cmake --build .
          cmake --build . --target install 
          
      - name: Did it work (conda2)?
        if: matrix.support2
        run: |
          pushd ~
          __conda_setup="$(~/miniconda2/bin/conda shell.bash hook 2> /dev/null)"
          if [ $? -eq 0 ]; then
            eval "$__conda_setup"
          else
            if [ -f "~/miniconda2/etc/profile.d/conda.sh" ]; then
              source "~/miniconda2/etc/profile.d/conda.sh"
            else
              export PATH="~/miniconda2/bin:$PATH"
            fi
          fi
          unset __conda_setup
          conda activate
          popd
          mkdir -p test2 && cd test2
          cp -r ../examples .
          cd examples
          grcc tutorial.grc
          cp tutorial.py ~/artifacts.tutorial2.py         

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: gr=${{matrix.gr}}_bokeh=${{matrix.bokeh}}_os=${{matrix.os}}
          path: ~/artifacts/
